/*******************************************************************************
* nnc.ts
*
* @概要
* javascriptの名前空間を汚さないようにjavascriptのオブジェクト管理する仕組みを構築。
* またサイト全体で使用する共通処理などもここに定義する。
*******************************************************************************/
(function()
{
  /*****************************************************************************
  * モジュールの保存、取得を提供する。
  *****************************************************************************/
  class NNC
  {
    // モジュール格納庫
    private modules: any;

    //--------------------------------------------------------------------------
    // コンストラクタ
    constructor()
    {
      this.modules = {};
    }

    //--------------------------------------------------------------------------
    // モジュールをセットする。
    public setModule(name:string, module:any): void
    {
      this.modules[name] = module;
    }

    //--------------------------------------------------------------------------
    // モジュールをゲットする。
    public getModule(name:string): any
    {
      return this.modules[name];
    }
  }

  // window.nncで外部に公開する。
  var _nnc = new NNC();
  (<any>window).nnc = function (name: string, mod?: any): any
  {
    if(mod) {
      _nnc.setModule(name, mod);
    } else {
      return _nnc.getModule(name);
    }
  };

})();
